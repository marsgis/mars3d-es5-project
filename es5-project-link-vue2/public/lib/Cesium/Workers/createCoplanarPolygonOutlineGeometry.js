define(["./arrayRemoveDuplicates-7cd4e18c","./Transforms-46cc38bd","./Matrix2-d1511f33","./RuntimeError-8f3d96ee","./ComponentDatatype-5f63ec93","./CoplanarPolygonGeometryLibrary-459ad8f1","./when-229515d6","./GeometryAttribute-727885bb","./GeometryAttributes-b253752a","./GeometryInstance-76340cd7","./GeometryPipeline-a8cfaf59","./IndexDatatype-c2b69fc2","./PolygonGeometryLibrary-090c0f88","./combine-6d9c3903","./WebGLConstants-f63312fc","./OrientedBoundingBox-9ee6ad06","./EllipsoidTangentPlane-7095b5e7","./AxisAlignedBoundingBox-b31bb45f","./IntersectionTests-65655905","./Plane-1217b5b0","./AttributeCompression-6b1e8028","./EncodedCartesian3-39245db5","./ArcType-e1641d8d","./EllipsoidRhumbLine-15aed367","./PolygonPipeline-83aaf7c0"],(function(e,t,n,o,r,i,a,c,y,l,s,p,u,d,m,f,g,b,h,P,G,L,T,E,A){"use strict";function C(e){const t=e.length,n=new Float64Array(3*t),o=p.IndexDatatype.createTypedArray(t,2*t);let i=0,a=0;for(let r=0;r<t;r++){const c=e[r];n[i++]=c.x,n[i++]=c.y,n[i++]=c.z,o[a++]=r,o[a++]=(r+1)%t}const l=new y.GeometryAttributes({position:new c.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})});return new c.Geometry({attributes:l,indices:o,primitiveType:c.PrimitiveType.LINES})}function H(e){const t=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+1}H.fromPositions=function(e){return new H({polygonHierarchy:{positions:(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).positions}})},H.pack=function(e,t,n){return n=a.defaultValue(n,0),t[n=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,n)]=e.packedLength,t};const k={polygonHierarchy:{}};return H.unpack=function(e,t,n){t=a.defaultValue(t,0);const o=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=o.startingIndex,delete o.startingIndex;const r=e[t];return a.defined(n)||(n=new H(k)),n._polygonHierarchy=o,n.packedLength=r,n},H.createGeometry=function(o){const r=o._polygonHierarchy;let a=r.positions;if(a=e.arrayRemoveDuplicates(a,n.Cartesian3.equalsEpsilon,!0),a.length<3)return;if(!i.CoplanarPolygonGeometryLibrary.validOutline(a))return;const y=u.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(r,!1);if(0===y.length)return;const p=[];for(let e=0;e<y.length;e++){const t=new l.GeometryInstance({geometry:C(y[e])});p.push(t)}const d=s.GeometryPipeline.combineInstances(p)[0],m=t.BoundingSphere.fromPoints(r.positions);return new c.Geometry({attributes:d.attributes,indices:d.indices,primitiveType:d.primitiveType,boundingSphere:m})},function(e,t){return a.defined(t)&&(e=H.unpack(e,t)),e._ellipsoid=n.Ellipsoid.clone(e._ellipsoid),H.createGeometry(e)}}));
